{"ast":null,"code":"import { resetTripForm } from './tripForm'; // synchronous actions\n\nexport const setMyTrips = trips => {\n  return {\n    type: \"SET_MY_TRIPS\",\n    trips\n  };\n};\nexport const clearTrips = () => {\n  return {\n    type: \"CLEAR_TRIPS\"\n  };\n};\nexport const addTrip = trip => {\n  return {\n    type: \"ADD_TRIP\",\n    trip\n  };\n};\nexport const deleteTripSuccess = tripId => {\n  return {\n    type: \"DELETE_TRIP\",\n    tripId\n  };\n};\nexport const updateTripSuccess = trip => {\n  return {\n    type: \"UPDATE_TRIP\",\n    trip\n  };\n}; // async actions\n\nexport const getMyTrips = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/trips\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setMyTrips(response.data));\n      }\n    }).catch(console.log);\n  };\n};\nexport const createTrip = (tripData, history) => {\n  return dispatch => {\n    const sendableTripData = {\n      start_date: tripData.startDate,\n      end_date: tripData.endDate,\n      name: tripData.name,\n      user_id: tripData.userId\n    };\n    return fetch(\"http://localhost:3001/api/v1/trips\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableTripData)\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(addTrip(resp.data));\n        dispatch(resetTripForm());\n        history.push(`/trips/${resp.data.id}`); // go somewhere else --> trip show?\n        // add the new trip to the store\n      }\n    }).catch(console.log);\n  };\n};\nexport const updateTrip = (tripData, history) => {\n  return dispatch => {\n    const sendableTripData = {\n      start_date: tripData.startDate,\n      end_date: tripData.endDate,\n      name: tripData.name\n    };\n    return fetch(`http://localhost:3001/api/v1/trips/${tripData.tripId}`, {\n      credentials: \"include\",\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableTripData)\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(updateTripSuccess(resp.data));\n        history.push(`/trips/${resp.data.id}`); // go somewhere else --> trip show?\n        // add the new trip to the store\n      }\n    }).catch(console.log);\n  };\n};\nexport const deleteTrip = (tripId, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/api/v1/trips/${tripId}`, {\n      credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(deleteTripSuccess(tripId));\n        history.push(`/trips`); // go somewhere else --> trip show?\n        // add the new trip to the store\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/traveler-frontend/src/actions/myTrips.js"],"names":["resetTripForm","setMyTrips","trips","type","clearTrips","addTrip","trip","deleteTripSuccess","tripId","updateTripSuccess","getMyTrips","dispatch","fetch","credentials","method","headers","then","r","json","response","error","alert","data","catch","console","log","createTrip","tripData","history","sendableTripData","start_date","startDate","end_date","endDate","name","user_id","userId","body","JSON","stringify","resp","push","id","updateTrip","deleteTrip"],"mappings":"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","sourcesContent":["import { resetTripForm } from './tripForm'\n\n// synchronous actions\nexport const setMyTrips = trips => {\n  return {\n    type: \"SET_MY_TRIPS\",\n    trips\n  }\n}\n\nexport const clearTrips = () => {\n  return {\n    type: \"CLEAR_TRIPS\"\n  }\n}\n\nexport const addTrip = trip => {\n  return {\n    type: \"ADD_TRIP\",\n    trip\n  }\n}\n\nexport const deleteTripSuccess = tripId => {\n  return {\n    type: \"DELETE_TRIP\",\n    tripId\n  }\n}\n\nexport const updateTripSuccess = trip => {\n  return {\n    type: \"UPDATE_TRIP\",\n    trip\n  }\n}\n\n// async actions\n\nexport const getMyTrips = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/trips\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setMyTrips(response.data))\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const createTrip = (tripData, history) => {\n  return dispatch => {\n    const sendableTripData = {\n      start_date: tripData.startDate,\n      end_date: tripData.endDate,\n      name: tripData.name,\n      user_id: tripData.userId\n    }\n    return fetch(\"http://localhost:3001/api/v1/trips\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableTripData)\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(addTrip(resp.data))\n          dispatch(resetTripForm())\n          history.push(`/trips/${resp.data.id}`)\n          // go somewhere else --> trip show?\n          // add the new trip to the store\n        }\n      })\n      .catch(console.log)\n\n  }\n}\n\nexport const updateTrip = (tripData, history) => {\n  return dispatch => {\n    const sendableTripData = {\n      start_date: tripData.startDate,\n      end_date: tripData.endDate,\n      name: tripData.name\n    }\n    return fetch(`http://localhost:3001/api/v1/trips/${tripData.tripId}`, {\n      credentials: \"include\",\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableTripData)\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(updateTripSuccess(resp.data))\n          history.push(`/trips/${resp.data.id}`)\n          // go somewhere else --> trip show?\n          // add the new trip to the store\n        }\n      })\n      .catch(console.log)\n\n  }\n}\n\nexport const deleteTrip = (tripId, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3001/api/v1/trips/${tripId}`, {\n      credentials: \"include\",\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(deleteTripSuccess(tripId))\n          history.push(`/trips`)\n          // go somewhere else --> trip show?\n          // add the new trip to the store\n        }\n      })\n      .catch(console.log)\n\n  }\n\n}"]},"metadata":{},"sourceType":"module"}