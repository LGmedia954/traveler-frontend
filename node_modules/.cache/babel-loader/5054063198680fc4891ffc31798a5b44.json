{"ast":null,"code":"var _jsxFileName = \"/Users/lesliegonzalez/Development/traveler-frontend/src/components/NewTripForm.js\";\nimport React from 'react'; // 1.  We first grab the action creator\n\nimport { updateNewTripForm } from '../actions/newTripForm';\nimport { connect } from 'react-redux'; // 3.  This means Redux gives us back a prop called updateTripForm\n// which when invoked, Redux will now dispatch\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewTripForm = () => {\n  // const { name, startDate, endDate } = formData\n  const handleChange = event => {\n    event.preventDefault();\n    const {\n      name,\n      value\n    } = event.target; // 4.  This is not an invocation of just the action creator,\n    // it's now Redux dispatching the action built by the action\n    // creator with the appropriate arguments\n\n    updateNewTripForm(name, value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"name\",\n      name: \"name\",\n      onChange: handleChange,\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"start date\",\n      name: \"startDate\",\n      onChange: handleChange,\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"end date\",\n      name: \"endDate\",\n      onChange: handleChange,\n      value: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Create Trip\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NewTripForm;\n\nconst mapStateToProps = state => {\n  const {\n    startDate,\n    endDate,\n    name\n  } = state.newTripForm;\n  return {\n    startDate,\n    endDate,\n    name\n  };\n}; // 2.  We pass the action creator to redux's connect function\n// using either mapDispatchToProps or the shorthand object syntax seen below.\n\n\nexport default connect(mapStateToProps, {\n  updateNewTripForm\n})(NewTripForm);\n\nvar _c;\n\n$RefreshReg$(_c, \"NewTripForm\");","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/traveler-frontend/src/components/NewTripForm.js"],"names":["React","updateNewTripForm","connect","NewTripForm","handleChange","event","preventDefault","name","value","target","mapStateToProps","state","startDate","endDate","newTripForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAIA;AACA;;;;AACA,MAAMC,WAAW,GAAG,MAAM;AAExB;AAEA,QAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,KAAK,CAACI,MAA9B,CAF4B,CAG5B;AACA;AACA;;AACAR,IAAAA,iBAAiB,CAACM,IAAD,EAAOC,KAAP,CAAjB;AACD,GAPD;;AASA,sBACE;AAAA,4BACE;AACE,MAAA,WAAW,EAAC,MADd;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAEJ,YAHZ;AAIE,MAAA,KAAK,EAAE;AAJT;AAAA;AAAA;AAAA;AAAA,YADF,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOE;AACE,MAAA,WAAW,EAAC,YADd;AAEE,MAAA,IAAI,EAAC,WAFP;AAGE,MAAA,QAAQ,EAAEA,YAHZ;AAIE,MAAA,KAAK,EAAE;AAJT;AAAA;AAAA;AAAA;AAAA,YAPF,eAYI;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaE;AACE,MAAA,WAAW,EAAC,UADd;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,QAAQ,EAAEA,YAHZ;AAIE,MAAA,KAAK,EAAE;AAJT;AAAA;AAAA;AAAA;AAAA,YAbF,eAkBI;AAAA;AAAA;AAAA;AAAA,YAlBJ,eAmBE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAG;AAFV;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBA,CAtCF;;KAAMD,W;;AAwCN,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBN,IAAAA;AAAtB,MAA8BI,KAAK,CAACG,WAA1C;AACA,SAAO;AACLF,IAAAA,SADK;AAELC,IAAAA,OAFK;AAGLN,IAAAA;AAHK,GAAP;AAKD,CAPD,C,CASA;AACA;;;AACA,eAAeL,OAAO,CAACQ,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAAgDE,WAAhD,CAAf","sourcesContent":["import React from 'react';\n// 1.  We first grab the action creator\nimport { updateNewTripForm } from '../actions/newTripForm'\nimport { connect } from 'react-redux'\n\n\n\n// 3.  This means Redux gives us back a prop called updateTripForm\n// which when invoked, Redux will now dispatch\nconst NewTripForm = () => {\n\n  // const { name, startDate, endDate } = formData\n\n  const handleChange = event => {\n    event.preventDefault()\n    const { name, value } = event.target\n    // 4.  This is not an invocation of just the action creator,\n    // it's now Redux dispatching the action built by the action\n    // creator with the appropriate arguments\n    updateNewTripForm(name, value)\n  }\n\n  return (\n    <form>\n      <input\n        placeholder=\"name\"\n        name=\"name\"\n        onChange={handleChange}\n        value={\"\"}\n      /><br/>\n      <input\n        placeholder=\"start date\"\n        name=\"startDate\"\n        onChange={handleChange}\n        value={\"\"}\n      /><br/>\n      <input\n        placeholder=\"end date\"\n        name=\"endDate\"\n        onChange={handleChange}\n        value={\"\"}\n      /><br/>\n      <input\n        type=\"submit\"\n        value={ \"Create Trip\" }\n      />\n    </form>\n)};\n\nconst mapStateToProps = state => {\n  const { startDate, endDate, name }= state.newTripForm\n  return {\n    startDate,\n    endDate,\n    name\n  }\n}\n\n// 2.  We pass the action creator to redux's connect function\n// using either mapDispatchToProps or the shorthand object syntax seen below.\nexport default connect(mapStateToProps, { updateNewTripForm })(NewTripForm);"]},"metadata":{},"sourceType":"module"}