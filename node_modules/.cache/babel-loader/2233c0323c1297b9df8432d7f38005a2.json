{"ast":null,"code":"// synchronous actions\nexport const setMyTrips = trips => {\n  return {\n    type: \"SET_MY_TRIPS\",\n    trips\n  };\n};\nexport const clearTrips = () => {\n  return {\n    type: \"CLEAR_TRIPS\"\n  };\n};\nexport const addTrip = trip => {\n  return {\n    type: \"ADD_TRIP\",\n    trip\n  };\n}; // async actions\n\nexport const getMyTrips = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/trips\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(r => r.json()).then(response => {\n      if (response.error) {\n        alert(response.error);\n      } else {\n        dispatch(setMyTrips(response.data));\n      }\n    }).catch(console.log);\n  };\n};\nexport const createTrip = tripData => {\n  return dispatch => {\n    const sendableTripData = {\n      trip: {\n        start_date: tripData.startDate,\n        end_date: tripData.endDate,\n        name: tripData.name,\n        user_id: tripData.userId\n      }\n    };\n    return fetch(\"http://localhost:3001/api/v1/trips\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableTripData)\n    }).then(r => r.json()).then(resp => {\n      if (resp.error) {\n        alert(resp.error);\n      } else {\n        dispatch(addTrip(resp.data));\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/traveler-frontend/src/actions/myTrips.js"],"names":["setMyTrips","trips","type","clearTrips","addTrip","trip","getMyTrips","dispatch","fetch","credentials","method","headers","then","r","json","response","error","alert","data","catch","console","log","createTrip","tripData","sendableTripData","start_date","startDate","end_date","endDate","name","user_id","userId","body","JSON","stringify","resp"],"mappings":"AAAA;AACA,OAAO,MAAMA,UAAU,GAAGC,KAAK,IAAI;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAE,cADD;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLD,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAME,OAAO,GAAGC,IAAI,IAAI;AAC7B,SAAO;AACLH,IAAAA,IAAI,EAAE,UADD;AAELG,IAAAA;AAFK,GAAP;AAID,CALM,C,CAOP;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,oCAAD,EAAuC;AACjDC,MAAAA,WAAW,EAAE,SADoC;AAEjDC,MAAAA,MAAM,EAAE,KAFyC;AAGjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHwC,KAAvC,CAAL,CAOJC,IAPI,CAOCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAPN,EAQJF,IARI,CAQCG,QAAQ,IAAI;AAChB,UAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,QAAAA,KAAK,CAACF,QAAQ,CAACC,KAAV,CAAL;AACD,OAFD,MAEO;AACLT,QAAAA,QAAQ,CAACP,UAAU,CAACe,QAAQ,CAACG,IAAV,CAAX,CAAR;AACD;AACF,KAdI,EAeJC,KAfI,CAeEC,OAAO,CAACC,GAfV,CAAP;AAgBD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMC,UAAU,GAAIC,QAAD,IAAc;AACtC,SAAOhB,QAAQ,IAAI;AACjB,UAAMiB,gBAAgB,GAAG;AACvBnB,MAAAA,IAAI,EAAE;AACNoB,QAAAA,UAAU,EAAEF,QAAQ,CAACG,SADf;AAENC,QAAAA,QAAQ,EAAEJ,QAAQ,CAACK,OAFb;AAGNC,QAAAA,IAAI,EAAEN,QAAQ,CAACM,IAHT;AAINC,QAAAA,OAAO,EAAEP,QAAQ,CAACQ;AAJZ;AADiB,KAAzB;AAQA,WAAOvB,KAAK,CAAC,oCAAD,EAAuC;AACjDC,MAAAA,WAAW,EAAE,SADoC;AAEjDC,MAAAA,MAAM,EAAE,MAFyC;AAGjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHwC;AAMjDqB,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,gBAAf;AAN2C,KAAvC,CAAL,CAQJZ,IARI,CAQCC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARN,EASJF,IATI,CASCuB,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACnB,KAAT,EAAgB;AACdC,QAAAA,KAAK,CAACkB,IAAI,CAACnB,KAAN,CAAL;AACD,OAFD,MAEO;AACLT,QAAAA,QAAQ,CAACH,OAAO,CAAC+B,IAAI,CAACjB,IAAN,CAAR,CAAR;AAED;AACF,KAhBI,EAiBJC,KAjBI,CAiBEC,OAAO,CAACC,GAjBV,CAAP;AAmBD,GA5BD;AA6BD,CA9BM","sourcesContent":["// synchronous actions\nexport const setMyTrips = trips => {\n  return {\n    type: \"SET_MY_TRIPS\",\n    trips\n  }\n}\n\nexport const clearTrips = () => {\n  return {\n    type: \"CLEAR_TRIPS\"\n  }\n}\n\nexport const addTrip = trip => {\n  return {\n    type: \"ADD_TRIP\",\n    trip\n  }\n}\n\n// async actions\nexport const getMyTrips = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/trips\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n    })\n      .then(r => r.json())\n      .then(response => {\n        if (response.error) {\n          alert(response.error)\n        } else {\n          dispatch(setMyTrips(response.data))\n        }\n      })\n      .catch(console.log)\n  }\n}\n\nexport const createTrip = (tripData) => {\n  return dispatch => {\n    const sendableTripData = {\n      trip: {\n      start_date: tripData.startDate,\n      end_date: tripData.endDate,\n      name: tripData.name,\n      user_id: tripData.userId\n      }\n    }\n    return fetch(\"http://localhost:3001/api/v1/trips\", {\n      credentials: \"include\",\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(sendableTripData)\n    })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          dispatch(addTrip(resp.data))\n          \n        }\n      })\n      .catch(console.log)\n\n  }\n}"]},"metadata":{},"sourceType":"module"}