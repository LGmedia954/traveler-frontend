{"ast":null,"code":"var _jsxFileName = \"/Users/lesliegonzalez/Development/traveler-frontend/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux';\nimport { getCurrentUser } from \"./actions/currentUser.js\";\nimport Login from './components/Login.js';\nimport Logout from './components/Logout.js';\nimport currentUser from './reducers/currentUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.getCurrentUser();\n  }\n\n  render() {\n    return props.currentUser ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 38\n    }, this);\n  }\n\n} // const mapStateToProps = state => {\n//   return {\n//     currentUser: state\n//   }\n// }\n// We can do this deconstruct because the incoming argument is an object, \n// state, coming from redux, and it has a property called currentUser\n\n\nconst mapStateToProps = _ref => {\n  let {\n    currentUser\n  } = _ref;\n  return {\n    currentUser\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getCurrentUser\n})(App);","map":{"version":3,"sources":["/Users/lesliegonzalez/Development/traveler-frontend/src/App.js"],"names":["React","connect","getCurrentUser","Login","Logout","currentUser","App","Component","componentDidMount","props","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAEhCC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWP,cAAX;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,WACED,KAAK,CAACJ,WAAN,gBAAoB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAApB,gBAA+B,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YADjC;AAID;;AAX+B,C,CAclC;AACA;AACA;AACA;AACA;AAEA;AACA;;;AACA,MAAMM,eAAe,GAAG,QAAqB;AAAA,MAApB;AAAEN,IAAAA;AAAF,GAAoB;AAC3C,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACU,eAAD,EAAkB;AAAET,EAAAA;AAAF,CAAlB,CAAP,CAA6CI,GAA7C,CAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { connect } from 'react-redux'\nimport { getCurrentUser } from \"./actions/currentUser.js\"\nimport Login from './components/Login.js'\nimport Logout from './components/Logout.js'\nimport currentUser from './reducers/currentUser';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.getCurrentUser()\n  }\n\n  render() {\n    return (\n      props.currentUser ? <Login/> : <Login/>\n    );\n\n  }\n}\n\n// const mapStateToProps = state => {\n//   return {\n//     currentUser: state\n//   }\n// }\n\n// We can do this deconstruct because the incoming argument is an object, \n// state, coming from redux, and it has a property called currentUser\nconst mapStateToProps = ({ currentUser }) => {\n  return {\n    currentUser\n  }\n}\n\nexport default connect(mapStateToProps, { getCurrentUser })(App);\n"]},"metadata":{},"sourceType":"module"}